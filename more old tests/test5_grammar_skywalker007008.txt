CONSTTK const
INTTK int
IDENFR pi
ASSIGN =
INTCON 314
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
INTTK int
IDENFR a10
ASSIGN =
INTCON 10
<无符号整数>
<整数>
COMMA ,
IDENFR a20
ASSIGN =
PLUS +
INTCON 20
<无符号整数>
<整数>
COMMA ,
IDENFR a30
ASSIGN =
MINU -
INTCON 30
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR adder
ASSIGN =
CHARCON +
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR pluser
ASSIGN =
CHARCON *
COMMA ,
IDENFR number
ASSIGN =
CHARCON 8
COMMA ,
IDENFR letter
ASSIGN =
CHARCON a
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR var2
COMMA ,
IDENFR var3
COMMA ,
IDENFR varray
LBRACK [
INTCON 10
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
CHARTK char
IDENFR var5
COMMA ,
IDENFR var6
COMMA ,
IDENFR varraychar
LBRACK [
INTCON 20
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
INTTK int
IDENFR var1
<变量定义>
SEMICN ;
CHARTK char
IDENFR var4
<变量定义>
SEMICN ;
<变量说明>
INTTK int
IDENFR add
<声明头部>
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR var1
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR c
<变量定义>
SEMICN ;
<变量说明>
LBRACE {
IDENFR c
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
IDENFR c
ASSIGN =
IDENFR c
<因子>
MULT *
IDENFR var1
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR c
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR fortest
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON for test
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 2
<无符号整数>
<步长>
RPARENT )
PRINTFTK printf
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 5
<无符号整数>
<步长>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
GEQ >=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
MINU -
INTCON 2
<无符号整数>
<步长>
RPARENT )
PRINTFTK printf
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON for test finished
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR exptest
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR a
COMMA ,
IDENFR c
<变量定义>
SEMICN ;
CHARTK char
IDENFR b
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON exptest begin,please input a int and a char
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR a
COMMA ,
IDENFR b
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR a
ASSIGN =
PLUS +
IDENFR a
<因子>
MULT *
LPARENT (
MINU -
PLUS +
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 20
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
DIV /
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR c
ASSIGN =
MINU -
CHARCON a
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR c
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
SEMICN ;
<语句>
SEMICN ;
<语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR c
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR arraytest
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
IDENFR varray
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR varray
LBRACK [
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR varray
LBRACK [
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR varray
LBRACK [
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR varray
LBRACK [
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
LPARENT (
IDENFR varray
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
PLUS +
IDENFR varray
LBRACK [
IDENFR varray
LBRACK [
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
PLUS +
IDENFR varray
LBRACK [
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
PLUS +
IDENFR varray
LBRACK [
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
IDENFR varray
LBRACK [
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR fib
<声明头部>
LPARENT (
INTTK int
IDENFR a
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
EQL ==
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
EQL ==
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
IDENFR fib
LPARENT (
IDENFR a
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
PLUS +
IDENFR fib
LPARENT (
IDENFR a
<因子>
<项>
MINU -
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR whiletest
LPARENT (
INTTK int
IDENFR a
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON while test
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
GRE >
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR a
ASSIGN =
IDENFR a
<因子>
<项>
MINU -
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
WHILETK while
LPARENT (
INTCON 15
<无符号整数>
<整数>
<因子>
<项>
<表达式>
GRE >
IDENFR a
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR a
ASSIGN =
IDENFR a
<因子>
<项>
PLUS +
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON while test finished
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR calltest3
LPARENT (
CHARTK char
IDENFR a
COMMA ,
CHARTK char
IDENFR b
COMMA ,
CHARTK char
IDENFR c
COMMA ,
CHARTK char
IDENFR d
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR c
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR d
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON this is calltest3
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR calltest2
LPARENT (
<参数表>
RPARENT )
LBRACE {
IDENFR calltest3
LPARENT (
IDENFR letter
<因子>
<项>
<表达式>
COMMA ,
IDENFR pluser
<因子>
<项>
<表达式>
COMMA ,
IDENFR adder
<因子>
<项>
<表达式>
COMMA ,
IDENFR number
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON this is calltest2
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR calltest1
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON this is calltest1
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR calltest2
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR chartest
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
CHARCON H
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
CHARCON E
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
CHARCON L
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
CHARCON L
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
CHARCON O
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
CHARCON W
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR result
COMMA ,
IDENFR fibnum
<变量定义>
SEMICN ;
CHARTK char
IDENFR cc
<变量定义>
SEMICN ;
<变量说明>
PRINTFTK printf
LPARENT (
STRCON test is starting
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON add test:
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR result
ASSIGN =
IDENFR add
LPARENT (
IDENFR a10
<因子>
<项>
<表达式>
COMMA ,
IDENFR a20
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON add result: 10+20=
<字符串>
COMMA ,
IDENFR result
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON exptest result:
<字符串>
COMMA ,
IDENFR exptest
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON array test
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR result
ASSIGN =
IDENFR arraytest
<因子>
<项>
PLUS +
INTCON 5
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON array test result:
<字符串>
COMMA ,
IDENFR result
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON recursion test,please input a fib number
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR fibnum
RPARENT )
<读语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR fibnum
<因子>
<项>
<表达式>
GRE >
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON fibnum is too big
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
IFTK if
LPARENT (
IDENFR fibnum
<因子>
<项>
<表达式>
LSS <
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON fibnum is too small
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
ELSETK else
PRINTFTK printf
LPARENT (
STRCON fib result is:
<字符串>
COMMA ,
IDENFR fib
LPARENT (
IDENFR fibnum
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON loop test beign
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR whiletest
LPARENT (
INTCON 10
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR fortest
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON loop test finished
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON if test begin
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON error
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON correct
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<条件语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON please input: 'a'
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR cc
RPARENT )
<读语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
LPARENT (
IDENFR cc
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
EQL ==
LPARENT (
CHARCON a
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<条件>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON your input is correct!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
ELSETK else
PRINTFTK printf
LPARENT (
STRCON error!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<条件语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON string test
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ! #$%&'()*+,-./0123456789:;<=>?@ABCXYZabcxyz[\]^_{|}~
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON string test finished
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON char test
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR chartest
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON call test
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR calltest1
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON call test finished
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON TEST IS OVER!
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
