CONSTTK const
INTTK int
IDENFR MAX_STACK_NUM
ASSIGN =
INTCON 10
<无符号整数>
<整数>
COMMA ,
IDENFR MAX_CHOOSE_NUM
ASSIGN =
INTCON 10
<无符号整数>
<整数>
<常量定义>
SEMICN ;
CONSTTK const
CHARTK char
IDENFR DIVIDE
ASSIGN =
CHARCON _
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR stack
LBRACK [
INTCON 12
<无符号整数>
RBRACK ]
COMMA ,
IDENFR used
LBRACK [
INTCON 12
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
INTTK int
IDENFR n
COMMA ,
IDENFR m
<变量定义>
SEMICN ;
INTTK int
IDENFR sum
<变量定义>
SEMICN ;
<变量说明>
VOIDTK void
IDENFR permutations
LPARENT (
INTTK int
IDENFR a
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
<变量定义>
SEMICN ;
<变量说明>
IDENFR i
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
EQL ==
IDENFR m
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
WHILETK while
LPARENT (
IDENFR i
<因子>
<项>
<表达式>
LSS <
IDENFR m
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
PRINTFTK printf
LPARENT (
STRCON  
<字符串>
COMMA ,
IDENFR stack
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR i
ASSIGN =
IDENFR i
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
PRINTFTK printf
LPARENT (
STRCON ___________
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR i
<因子>
<项>
<表达式>
LEQ <=
IDENFR n
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
LBRACE {
IFTK if
LPARENT (
IDENFR used
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
<表达式>
NEQ !=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
SEMICN ;
<语句>
ELSETK else
LBRACE {
IDENFR stack
LBRACK [
IDENFR a
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR i
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR used
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR permutations
LPARENT (
IDENFR a
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR used
LBRACK [
IDENFR i
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR get_max_num_1
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR MAX_STACK_NUM
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR get_max_num_2
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR max_num
<变量定义>
SEMICN ;
<变量说明>
IDENFR max_num
ASSIGN =
IDENFR MAX_CHOOSE_NUM
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
RETURNTK return
LPARENT (
IDENFR max_num
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR get_2
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR m
ASSIGN =
INTCON 2
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
RETURNTK return
LPARENT (
IDENFR m
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
INTTK int
IDENFR compute
<声明头部>
LPARENT (
INTTK int
IDENFR a
COMMA ,
INTTK int
IDENFR b
COMMA ,
CHARTK char
IDENFR op
<参数表>
RPARENT )
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR op
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
EQL ==
LPARENT (
CHARCON +
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
LPARENT (
IDENFR a
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
MULT *
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
MINU -
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR op
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
EQL ==
LPARENT (
CHARCON -
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
IDENFR a
<因子>
<项>
MINU -
LPARENT (
IDENFR b
<因子>
<项>
PLUS +
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<因子>
DIV /
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
IFTK if
LPARENT (
LPARENT (
IDENFR op
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
EQL ==
LPARENT (
CHARCON *
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
IDENFR a
<因子>
MULT *
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
IFTK if
LPARENT (
IDENFR b
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
IDENFR a
<因子>
DIV /
IDENFR b
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
ELSETK else
RETURNTK return
LPARENT (
LPARENT (
LPARENT (
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
MINU -
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
DIV /
INTCON 5
<无符号整数>
<整数>
<因子>
MULT *
INTCON 6
<无符号整数>
<整数>
<因子>
<项>
PLUS +
MINU -
INTCON 7
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR get_permutations_sy
<声明头部>
LPARENT (
<参数表>
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR PERMUTATIONS_SY
ASSIGN =
CHARCON T
<常量定义>
SEMICN ;
<常量说明>
RETURNTK return
LPARENT (
IDENFR PERMUTATIONS_SY
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
CHARTK char
IDENFR judge
<声明头部>
LPARENT (
INTTK int
IDENFR n
COMMA ,
INTTK int
IDENFR m
<参数表>
RPARENT )
LBRACE {
CONSTTK const
CHARTK char
IDENFR DIVIDE
ASSIGN =
CHARCON *
<常量定义>
SEMICN ;
<常量说明>
PRINTFTK printf
LPARENT (
IDENFR DIVIDE
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
GEQ >=
IDENFR get_max_num_1
<因子>
<项>
PLUS +
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
CHARCON F
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR m
<因子>
<项>
<表达式>
GRE >
IDENFR n
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
CHARCON F
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
IFTK if
LPARENT (
IDENFR m
<因子>
<项>
<表达式>
LEQ <=
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
RPARENT )
RETURNTK return
LPARENT (
CHARCON F
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<条件语句>
<语句>
RETURNTK return
LPARENT (
CHARCON T
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
IDENFR preparation
LPARENT (
<参数表>
RPARENT )
LBRACE {
CONSTTK const
INTTK int
IDENFR zero
ASSIGN =
INTCON 0
<无符号整数>
<整数>
<常量定义>
SEMICN ;
<常量说明>
INTTK int
IDENFR n
<变量定义>
SEMICN ;
INTTK int
IDENFR i
<变量定义>
SEMICN ;
INTTK int
IDENFR array
LBRACK [
INTCON 12
<无符号整数>
RBRACK ]
<变量定义>
SEMICN ;
<变量说明>
IDENFR n
ASSIGN =
IDENFR compute
LPARENT (
IDENFR get_max_num_1
<因子>
<项>
<表达式>
COMMA ,
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
CHARCON +
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
WHILETK while
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
<条件>
RPARENT )
LBRACE {
IDENFR n
ASSIGN =
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
PLUS +
IDENFR n
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR used
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR zero
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR array
LBRACK [
IDENFR n
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
INTCON 10086
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<循环语句>
<语句>
FORTK for
LPARENT (
IDENFR n
ASSIGN =
IDENFR compute
LPARENT (
IDENFR MAX_CHOOSE_NUM
<因子>
<项>
<表达式>
COMMA ,
IDENFR get_2
<因子>
<项>
<表达式>
COMMA ,
CHARCON +
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
IDENFR n
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR n
ASSIGN =
IDENFR n
MINU -
INTCON 1
<无符号整数>
<步长>
RPARENT )
IDENFR stack
LBRACK [
IDENFR n
<因子>
<项>
MINU -
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
ASSIGN =
IDENFR array
LBRACK [
IDENFR n
<因子>
<项>
PLUS +
LPARENT (
MINU -
INTCON 6
<无符号整数>
<整数>
<因子>
DIV /
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
PLUS +
INTCON 2
<无符号整数>
<整数>
<因子>
MULT *
INTCON 3
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RPARENT )
<因子>
MULT *
INTCON 4
<无符号整数>
<整数>
<因子>
<项>
MINU -
INTCON 21
<无符号整数>
<整数>
<因子>
<项>
<表达式>
RBRACK ]
<因子>
<项>
MINU -
INTCON 10086
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
<循环语句>
<语句>
RETURNTK return
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
VOIDTK void
IDENFR test_for
LPARENT (
<参数表>
RPARENT )
LBRACE {
INTTK int
IDENFR i
<变量定义>
SEMICN ;
<变量说明>
FORTK for
LPARENT (
IDENFR i
ASSIGN =
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
SEMICN ;
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<条件>
SEMICN ;
IDENFR i
ASSIGN =
IDENFR i
PLUS +
INTCON 1
<无符号整数>
<步长>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON test for success
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
<循环语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<无返回值函数定义>
INTTK int
IDENFR test_6_para
<声明头部>
LPARENT (
INTTK int
IDENFR a1
COMMA ,
INTTK int
IDENFR a2
COMMA ,
INTTK int
IDENFR a3
COMMA ,
INTTK int
IDENFR a4
COMMA ,
INTTK int
IDENFR a5
COMMA ,
INTTK int
IDENFR a6
<参数表>
RPARENT )
LBRACE {
RETURNTK return
LPARENT (
IDENFR a1
<因子>
<项>
PLUS +
IDENFR a2
<因子>
<项>
PLUS +
IDENFR a3
<因子>
<项>
PLUS +
IDENFR a4
<因子>
<项>
PLUS +
IDENFR a5
<因子>
<项>
PLUS +
IDENFR a6
<因子>
<项>
<表达式>
RPARENT )
<返回语句>
SEMICN ;
<语句>
<语句列>
<复合语句>
RBRACE }
<有返回值函数定义>
VOIDTK void
MAINTK main
LPARENT (
RPARENT )
LBRACE {
INTTK int
IDENFR a
COMMA ,
IDENFR b
<变量定义>
SEMICN ;
CHARTK char
IDENFR op
<变量定义>
SEMICN ;
CHARTK char
IDENFR sy
COMMA ,
IDENFR nor_sy
<变量定义>
SEMICN ;
<变量说明>
IDENFR test_for
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR a
COMMA ,
IDENFR b
COMMA ,
IDENFR op
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR n
ASSIGN =
IDENFR compute
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
COMMA ,
IDENFR b
<因子>
<项>
<表达式>
COMMA ,
IDENFR op
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR DIVIDE
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
SCANFTK scanf
LPARENT (
IDENFR m
RPARENT )
<读语句>
SEMICN ;
<语句>
IDENFR sy
ASSIGN =
IDENFR judge
LPARENT (
IDENFR n
<因子>
<项>
<表达式>
COMMA ,
IDENFR m
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IDENFR sum
ASSIGN =
IDENFR test_6_para
LPARENT (
IDENFR a
<因子>
<项>
<表达式>
COMMA ,
IDENFR b
<因子>
<项>
<表达式>
COMMA ,
IDENFR n
<因子>
<项>
<表达式>
COMMA ,
IDENFR m
<因子>
<项>
<表达式>
COMMA ,
INTCON 1
<无符号整数>
<整数>
<因子>
<项>
<表达式>
COMMA ,
INTCON 2
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
IDENFR sum
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON You can choose m numbers permutations from n numbers ? 
<字符串>
COMMA ,
IDENFR sy
<因子>
<项>
<表达式>
RPARENT )
<写语句>
SEMICN ;
<语句>
PRINTFTK printf
LPARENT (
STRCON ___________
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
IDENFR nor_sy
ASSIGN =
IDENFR get_permutations_sy
LPARENT (
<值参数表>
RPARENT )
<有返回值函数调用语句>
<因子>
<项>
<表达式>
<赋值语句>
SEMICN ;
<语句>
IFTK if
LPARENT (
LPARENT (
IDENFR sy
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
NEQ !=
LPARENT (
IDENFR nor_sy
<因子>
<项>
<表达式>
RPARENT )
<因子>
<项>
<表达式>
<条件>
RPARENT )
PRINTFTK printf
LPARENT (
STRCON error input: 0 < m <= n <= 10
<字符串>
RPARENT )
<写语句>
SEMICN ;
<语句>
ELSETK else
LBRACE {
IDENFR preparation
LPARENT (
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
IDENFR permutations
LPARENT (
INTCON 0
<无符号整数>
<整数>
<因子>
<项>
<表达式>
<值参数表>
RPARENT )
<无返回值函数调用语句>
SEMICN ;
<语句>
<语句列>
RBRACE }
<语句>
<条件语句>
<语句>
<语句列>
<复合语句>
RBRACE }
<主函数>
<程序>
